(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{228:function(s,a,e){"use strict";e.r(a);var n=e(3),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("在开始前，先回顾下【上篇】介绍的内容：")]),s._v(" "),e("p",[e("strong",[s._v("1 创建 React-APP")])]),s._v(" "),e("p",[e("strong",[s._v("2 精简项目")])]),s._v(" "),e("p",[s._v("2.1 删除文件")]),s._v(" "),e("p",[s._v("2.2 简化代码")]),s._v(" "),e("p",[s._v("2.3 使用 Fragment 去掉组件外层标签")]),s._v(" "),e("p",[e("strong",[s._v("3 项目目录结构")])]),s._v(" "),e("p",[s._v("3.1 引入全局公用样式")]),s._v(" "),e("p",[s._v("3.2 支持 Sass/Less/Stylus")]),s._v(" "),e("p",[e("strong",[s._v("4 路由")])]),s._v(" "),e("p",[s._v("4.1 页面构建")]),s._v(" "),e("p",[s._v("4.2 使用 react-router-dom")]),s._v(" "),e("p",[s._v("4.3 路由跳转")]),s._v(" "),e("p",[e("strong",[s._v("5 组件引入")])]),s._v(" "),e("p",[s._v("5.1 创建 header 组件")]),s._v(" "),e("p",[s._v("5.2 引入 Header 组件")]),s._v(" "),e("p",[s._v("5.3 组件传参")]),s._v(" "),e("p",[e("strong",[s._v("6 React Developer Tools 浏览器插件")])]),s._v(" "),e("p",[s._v("在本次的【下篇】中，继续分享以下内容：")]),s._v(" "),e("h2",{attrs:{id:"先睹为快"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先睹为快"}},[s._v("🖌")]),s._v(" 先睹为快")]),s._v(" "),e("p",[e("strong",[s._v("7 Redux 及相关插件")])]),s._v(" "),e("p",[s._v("7.1 安装 redux")]),s._v(" "),e("p",[s._v("7.2 安装 react-redux")]),s._v(" "),e("p",[s._v("7.3 安装 redux-thunk")]),s._v(" "),e("p",[s._v("7.4 安装浏览器 Redux 插件")]),s._v(" "),e("p",[s._v("7.5 创建 store")]),s._v(" "),e("p",[s._v("7.6 复杂项目 store 分解")]),s._v(" "),e("p",[s._v("7.7 对接 react-redux 与 store")]),s._v(" "),e("p",[s._v("7.8 启动 Redux DevTools")]),s._v(" "),e("p",[s._v("7.9 安装使用 immutable")]),s._v(" "),e("p",[e("strong",[s._v("8 Mock.js 安装与使用")])]),s._v(" "),e("p",[e("strong",[s._v("9 解决本地开发跨域问题")])]),s._v(" "),e("p",[e("strong",[s._v("10 其他常用工具")])]),s._v(" "),e("p",[s._v("11 附赠章节：集成 Ant Design")]),s._v(" "),e("p",[s._v("11.1 安装 Ant Design")]),s._v(" "),e("p",[s._v("11.2 实现按需加载")]),s._v(" "),e("p",[s._v("11.3 自定义主题颜色")]),s._v(" "),e("h2",{attrs:{id:"_7-redux-及相关插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-redux-及相关插件"}},[s._v("🖌")]),s._v(" 7 Redux 及相关插件")]),s._v(" "),e("p",[s._v("做过 vue 开发的同学都知道 vuex，react 对应的工具就是 Redux，当然还有一些附属工具，比如 react-redux、redux-thunk、immutable。")]),s._v(" "),e("p",[s._v("redux 涉及内容篇幅较多，可以单独作为一次分享。本次分享篇幅有限，仅简要介绍下安装部署流程，如有看不懂的地方可先跳过或自行查阅官方文档。")]),s._v(" "),e("h3",{attrs:{id:"_7-1-安装-redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-安装-redux"}},[s._v("🖌")]),s._v(" 7.1 安装 redux")]),s._v(" "),e("p",[s._v("执行：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install  redux --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("仅安装 redux 也是可以使用的，但是比较麻烦。redux 里更新 store 里的数据，需要手动订阅 (subscribe) 更新。可以借助另一个插件（react-redux）提高开发效率。")]),s._v(" "),e("h3",{attrs:{id:"_7-2-安装-react-redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-安装-react-redux"}},[s._v("🖌")]),s._v(" 7.2 安装 react-redux")]),s._v(" "),e("p",[s._v("执行：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install react-redux --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("react-redux 允许通过 connect 方法，将 store 中的数据映射到组件的 props，省去了 store 订阅。原 state 中读取 store 的属性改用 props 读取。")]),s._v(" "),e("p",[s._v("由于 store（7.5 小节）还没讲到，react-redux 使用方法在 7.6 小节介绍。")]),s._v(" "),e("h3",{attrs:{id:"_7-3-安装-redux-thunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-安装-redux-thunk"}},[s._v("🖌")]),s._v(" 7.3 安装 redux-thunk")]),s._v(" "),e("p",[s._v("执行：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install redux-thunk --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("redux-thunk 允许在 actionCreators 里返回函函数。这样可以把业务逻辑（例如接口请求）集中写在 actionCreator.js，方便复用的同时，可以使组件的主文件更简洁。")]),s._v(" "),e("h3",{attrs:{id:"_7-4-安装浏览器-redux-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-安装浏览器-redux-插件"}},[s._v("🖌")]),s._v(" 7.4 安装浏览器 Redux 插件")]),s._v(" "),e("p",[s._v("为了更方便跟踪 redux 状态，建议安装 chrome 插件。")]),s._v(" "),e("p",[s._v("先科学上网，在 chrome 网上应用店里搜索 “Redux DevTools” 并安装。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/2/3/1700920f3046b748?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),e("p",[s._v("安装完成后还不能直接使用，需要在项目代码中进行配置。接下来进行说明。")]),s._v(" "),e("h3",{attrs:{id:"_7-5-创建-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-创建-store"}},[s._v("🖌")]),s._v(" 7.5 创建 store")]),s._v(" "),e("p",[s._v("安装以上各种插件后，可以 store 用来管理状态数据了。")]),s._v(" "),e("p",[s._v("如果项目比较简单，只有一两个页面，可以只创建一个总 store 管理整体项目。目录结构参考如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    ├─ /src   \n+   |  ├─ /store\n+   |  |  ├─ actionCreators.js\n+   |  |  ├─ contants.js       <-- 定义方法的常量\n+   |  |  ├─ index.js\n+   |  |  └─ reducer.js\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("以下是各文件的代码示例：")]),s._v(" "),e("p",[s._v("src/store/actionCreators.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import * as constans from './constants'\n\nexport const getData = (data) => ({\n  type: constans.SET_DATA,\n  data\n})\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("src/store/contants.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export const SET_DATA = 'SET_DATA'\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("src/store/index.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { createStore, applyMiddleware, compose } from 'redux'\nimport reducer from './reducer'\nimport thunk from 'redux-thunk'\n\n// 这里让项目支持浏览器插件Redux DevTools\nconst composeEnhancers = typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk)\n);\n\nconst store = createStore(\n  reducer,\n  enhancer\n)\n\nexport default store\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("blockquote",[e("p",[s._v("以上是 store 的核心代码，支持了 Redux DevTools。同时，利用 redux 的集成中间件（applyMiddleware）功能将 redux-thunk 集成进来，最终创建了 store。")])]),s._v(" "),e("p",[s._v("src/store/reducer.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import * as constants from './constants'\n\n// 初始默认的state\nconst defaultState = {\n    myData: null\n}\n\nexport default (state = defaultState, action) => {\n    // 由于state是引用型，不能直接修改，否则是监测不到state发生变化的。因此需要先复制一份进行修改，然后再返回新的state。\n    let newState = Object.assign({}, state)\n    switch(action.type) {\n        case constants.SET_DATA:\n            newState.myData = action.data\n            return newState\n        default:\n            return state\n    }\n}\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("以上代码，我们在 store 设置了一个 myData。如何更好地解决 state 修改问题，在 7.8 小节会提到。")]),s._v(" "),e("h3",{attrs:{id:"_7-6-复杂项目-store-分解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-复杂项目-store-分解"}},[s._v("🖌")]),s._v(" 7.6 复杂项目 store 分解")]),s._v(" "),e("p",[s._v("应对更多页面的项目，如果数据都集中放在一个 store 里，其维护成本非常高。接下来分享下如何将 store 分解到各个组件中。")]),s._v(" "),e("p",[s._v("一般来说，每个组件有自己的 store，再由 src 下的 store 作为总集，集成每个组件的 store。")]),s._v(" "),e("p",[s._v("以 header 和 login 两个组件为例，分别创建组件自己的 store。")]),s._v(" "),e("p",[s._v("header 的 store 目录结构如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    |  |  ├─ /components\n    |  |  |  ├─ /header\n+   |  |  |  |  ├─ /store\n+   |  |  |  |  |  ├─ actionCreators.js\n+   |  |  |  |  |  ├─ contants.js      \n+   |  |  |  |  |  ├─ index.js\n+   |  |  |  |  |  └─ reducer.js\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("组件 store 下的 index.js 代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import reducer from './reducer'\nimport * as actionCreators from './actionCreators'\nimport * as constants from './constants'\n\nexport { reducer, actionCreators, constants}\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("其实就是把组件 store 下的其他文件集中起来作为统一输出口。")]),s._v(" "),e("p",[s._v("组件 store 下的 contants.js 代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const ZONE = 'components/header/'\n\nexport const SET_DATA = ZONE + 'SET_DATA'\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("ZONE 是用来避免与其他组件的 contants 重名。")]),s._v(" "),e("p",[s._v("同样的方式，在 login 下进行创建 store（不再赘述）。")]),s._v(" "),e("p",[s._v("然后修改项目 src 下的总 store，目录结构变动如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    ├─ /src   \n    |  ├─ /store\n-   |  |  ├─ actionCreators.js <-- 删除\n-   |  |  ├─ contants.js       <--删除\n    |  |  ├─ index.js\n    |  |  └─ reducer.js\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("src/store/index.js 重写如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { combineReducers } from 'redux'\n\nimport { reducer as loginReducer } from '../pages/login/store'\nimport { reducer as headerReducer } from '../components/header/store'\n\nconst reducer = combineReducers({\n    login: loginReducer,\n    header: headerReducer\n})\n\nexport default reducer\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("以上代码的作用就是把 login 和 header 的 store 引入，然后通过 combineReducers 合并在一起，并分别加上唯一的对象 key 值。")]),s._v(" "),e("p",[s._v("这样的好处非常明显：")]),s._v(" "),e("ol",[e("li",[s._v("避免各组件的 store 数据互相污染")]),s._v(" "),e("li",[s._v("组件独立维护自己的 store，减少维护成本")])]),s._v(" "),e("p",[s._v("非常建议使用这种方式维护 store。")]),s._v(" "),e("h3",{attrs:{id:"_7-7-对接-react-redux-与-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-对接-react-redux-与-store"}},[s._v("🖌")]),s._v(" 7.7 对接 react-redux 与 store")]),s._v(" "),e("p",[s._v("为了方便每个组件都能使用 store，而不用一遍一遍的引用 store。下面来对接 react-redux 与 store。")]),s._v(" "),e("p",[s._v("修改 src/index.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    import React from 'react'\n    import ReactDOM from 'react-dom'\n    import App from './App'\n+   import { Provider } from 'react-redux'\n+   import store from './store'\n    import './common/style/frame.styl'\n\n+   const Apps = (\n+       <Provider store={store}>\n+           <App />\n+       </Provider>\n+   )\n\nM   ReactDOM.render(Apps, document.getElementById('root'))\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("以上代码就是用 react-redux 提供的 Provider，把 store 传给了整个 App。")]),s._v(" "),e("p",[s._v("在需要使用 store 的组件中，要使用 react-redux 提供的 connect 方法对组件进行包装。")]),s._v(" "),e("p",[s._v("以 login 为例，修改 src/pages/login/index.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    import React, { Component } from 'react'\n    import Header from '../../components/header'\n+   import { connect } from 'react-redux'\n+   import * as actionCreators from './store/actionCreators'\n    import './login.styl'\n\n    class Login extends Component {\n        render() {\n            return (\n                <div class>\n                    <Header />\n                    <h1>Login page</h1>\n+                   <p>login: myData = {this.props.myData}</p>\n+                   <button onClick={()=> {this.props.getData('123456')}}>更改login的myData</button>\n                    <button onClick={this.gotoHome.bind(this)}>跳转Home页</button>\n                </div>\n            )\n        }\n\n        gotoHome() {\n            this.props.history.push('/home')\n        }\n    }\n\n+   // 把store中的数据映射到组件的props\n+   const mapStateToProps = (state) => ({\n+       myData: state.getIn(['login', 'myData']),\n+   })\n\n+   // 把store的Dispatch映射到组件的props\n+   const mapDispatchToProps = (dispatch) => ({\n+       getData(data) {\n+           const action = actionCreators.getData(data)\n+           dispatch(action)\n+       }\n+   })\n\nM   export default connect(mapStateToProps, mapDispatchToProps)(Login)\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br")])]),e("p",[s._v("最大的变化就是代码最后一行，被 connect 方法包装了。")]),s._v(" "),e("p",[s._v("然后把 store 里的 state 和 dispatch 都映射到了组件的 props。这样可以直接通过 props 进行访问了，store 中数据的变化会直接改变 props 从而触发组件的视图更新。")]),s._v(" "),e("p",[s._v("点击按钮后，可以看到页面中显示的 myData 发生了变化。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/2/3/170092145b7f0fe6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),e("p",[s._v("下面通过 Redux DevTools 进行可视化跟踪查看。")]),s._v(" "),e("h3",{attrs:{id:"_7-8-启动-redux-devtools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-8-启动-redux-devtools"}},[s._v("🖌")]),s._v(" 7.8 启动 Redux DevTools")]),s._v(" "),e("p",[s._v("经过 7.5 小节的设置，7.4 小节的 Redux DevTools 可以正常使用了。点击浏览器右上角的图标，在出现的面板里，可以相信地跟踪查看 store 里各数据的变化，非常方便。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/2/3/1700921651927c2a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),e("p",[s._v("还可以通过调试工具栏启动 Redux DevTools：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/2/3/1700921814587f59?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),e("p",[s._v("具体使用方法这里不赘述了。")]),s._v(" "),e("h3",{attrs:{id:"_7-9-安装使用-immutable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-9-安装使用-immutable"}},[s._v("🖌")]),s._v(" 7.9 安装使用 immutable")]),s._v(" "),e("p",[s._v("在 7.5 小节，提到了 store 里不能直接修改 state，因为 state 是引用类型，直接修改可能导致监测不到数据变化。")]),s._v(" "),e("p",[s._v("immutable.js 从字面上就可以明白，immutable 的意思是 “不可改变的”。使用 immutable 创建的数据是不可改变的，对 immutable 数据的任何修改都会返回一个新的 immutable 数据，不会改变原始 immutable 数据。")]),s._v(" "),e("p",[s._v("immutable.js 提供了很多方法，非常方便修改对象或数组类型的引用型数据。")]),s._v(" "),e("p",[s._v("安装 immutable 和 redux-immutable，执行：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install immutable redux-immutable --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("然后对代码进行改造：")]),s._v(" "),e("p",[s._v("src/store/reducer.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-   import { combineReducers } from 'redux'\n+   import { combineReducers } from 'redux-immutable'\n    ...(略)\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("以上代码就是把 combineReducers 换成 redux-immutable 里的。")]),s._v(" "),e("p",[s._v("然后修改 src/pages/login/store/reducer.js")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    import * as constants from './constants'\n+   import { fromJS } from 'immutable'\n\nM   const defaultState = fromJS({\n        myData: null\nM   })\n\n+   const getData = (state, action) => {\n+       return state.set('myData', action.data)\n+   }\n\n    export default (state = defaultState, action) => {\n        switch(action.type) {\n            case constants.SET_DATA:\nM               return getData(state, action)\n            default:\n                return state\n        }\n    }\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[s._v("immutable 的介入，就是利用 fromJS 方法，把原始的 JS 类型转化为 immutable 类型。")]),s._v(" "),e("p",[s._v("由于 state 已经是 immutable 类型了，可以使用 immutable 的 set 方法进行数据修改，并返回一个新的 state。代码简洁很多，不需要手动通过 Object.assign 等方法去复制再处理了。")]),s._v(" "),e("p",[s._v("header 组件的代码修改同理不再赘述。")]),s._v(" "),e("p",[s._v("immutable 还有很多其他非常使用方法，具体请参阅官方文档：")]),s._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://immutable-js.github.io/immutable-js/",target:"_blank",rel:"noopener noreferrer"}},[s._v("immutable-js.github.io/immutable-j…"),e("OutboundLink")],1)])]),s._v(" "),e("h2",{attrs:{id:"_8-mock-js-安装与使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-mock-js-安装与使用"}},[s._v("🖌")]),s._v(" 8 Mock.js 安装与使用")]),s._v(" "),e("p",[s._v("在开发过程中，为了方便前端独自调试接口，经常使用 Mock.js 拦截 Ajax 请求，并返回预置好的数据。本小节介绍下如何在 react 项目中使用 Mock.js。")]),s._v(" "),e("p",[s._v("执行安装：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install mockjs --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("在 src 下新建 mock.js，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import Mock from 'mockjs'\n\nconst domain = '/api/'\n\n// 模拟getData接口\nMock.mock(domain + 'getData', function () {\n    let result = {\n      code: 200,\n      message: 'OK',\n      data: 'test'\n    }\n    return result\n})\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("然后在 src/index.js 中引入 mock.js:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    import React from 'react'\n    import ReactDOM from 'react-dom'\n    import App from './App'\n    import { Provider } from 'react-redux'\n    import store from './store'\n+   import './mock'\n    import './common/style/frame.styl'\n\n    ...（略）\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("如此简单。这样，在项目中请求"),e("code",[s._v("/api/getData")]),s._v("的时候，就会被 Mock.js 拦截，并返回 mock.js 中写好的数据。")]),s._v(" "),e("h2",{attrs:{id:"_9-解决本地开发跨域问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-解决本地开发跨域问题"}},[s._v("🖌")]),s._v(" 9 解决本地开发跨域问题")]),s._v(" "),e("p",[s._v("在 react 开发环境中，默认启动的是 3000 端口，而后端 API 服务可能在本机的 80 端口，这样在 ajax 请求的时候会出现跨域问题。可以借助 http-proxy-middleware 工具实现反向代理。")]),s._v(" "),e("p",[s._v("执行安装：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install http-proxy-middleware --save-dev\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("在 src 下创建 setupProxy.js，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const proxy = require('http-proxy-middleware');\nmodule.exports = function (app) {\n    app.use(\n        '^/api',\n        proxy({\n            target: 'http://localhost',\n            changeOrigin: true\n        })\n    )\n}\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v('这代码的意思就是，只要请求地址是以 "/api" 开头，那就反向代理到 http://localhost 域名下，跨域问题解决！大家可以根据实际需求进行修改。')]),s._v(" "),e("blockquote",[e("p",[s._v("※注意：setupProxy.js 设置后，一定要重启项目才生效。")])]),s._v(" "),e("h2",{attrs:{id:"_10-其他常用工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-其他常用工具"}},[s._v("🖌")]),s._v(" 10 其他常用工具")]),s._v(" "),e("ol",[e("li",[s._v("Axios - Ajax 请求工具")])]),s._v(" "),e("p",[s._v("【官网】"),e("a",{attrs:{href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"}},[s._v("github.com/axios/axios"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("【安装命令】")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install axios --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("better-scroll - 页面原生滚动体验效果工具")])]),s._v(" "),e("p",[s._v("【官网】"),e("a",{attrs:{href:"http://ustbhuangyi.github.io/better-scroll/doc/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ustbhuangyi.github.io/better-scro…"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("【安装命令】")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install better-scroll --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("react-transition-group - CSS3 动画组合工具")])]),s._v(" "),e("p",[s._v("【官网】"),e("a",{attrs:{href:"https://github.com/reactjs/react-transition-group",target:"_blank",rel:"noopener noreferrer"}},[s._v("github.com/reactjs/rea…"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("【安装命令】")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install react-transition-group --save\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("react-loadable - 动态加载组件工具")])]),s._v(" "),e("p",[s._v("【官网】"),e("a",{attrs:{href:"https://www.npmjs.com/package/react-loadable",target:"_blank",rel:"noopener noreferrer"}},[s._v("www.npmjs.com/package/rea…"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("【安装命令】")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yarn add react-loadable\n复制代码\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"_11-附赠章节：集成-ant-design"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-附赠章节：集成-ant-design"}},[s._v("🖌")]),s._v(" 11 附赠章节：集成 Ant Design")]),s._v(" "),e("p",[s._v("Ant Design 是非常好用的前端 UI 库，很多项目都使用了 Ant Design。")]),s._v(" "),e("p",[s._v("【官网】")]),s._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://ant.design/index-cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("ant.design/index-cn"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("本章节内容基于上述章节将 create-react-app 进行 eject 后集成 Ant Design。")])])}),[],!1,null,null,null);a.default=t.exports}}]);